Assume that the value of a = 1, b = 2, c = 3, ... , z = 26. You are given a numeric string S. Write a program to print the list of all possible codes that can be generated from the given string.
Note : The order of codes are not important. Just print them in different lines.
Input format :
A numeric string S
Output Format :
All possible codes in different lines
Constraints :
1 <= Length of String S <= 10
Sample Input:
1123
Sample Output:
aabc
kbc
alc
aaw
kw


#include <iostream>
#include "solution.h"
using namespace std;

int main(){
    string input;
    cin >> input;

    printAllPossibleCodes(input);
    return 0;
}

#include<string.h>
using namespace std;
char getChar(int n)
{
    return (char)(n+96);
}
void printAllPossibleCodes(string input,string output)
{
    if(input.length()==0)
    {
        cout<<output<<endl;
        return;
    }
    int lastDigit=input[0]-'0';
    char singledigit = getChar(lastDigit);
    printAllPossibleCodes(input.substr(1), output + singledigit);

    int  doubledigitnumber=27;
    if(input.length()!=1)
    {
         doubledigitnumber = (input[0]-'0')*10 + (input[1]-'0');
    }
    char doubledigitchar;
    if(doubledigitnumber<=26 &&doubledigitnumber>=10)
    {
        doubledigitchar = getChar(doubledigitnumber);
            printAllPossibleCodes(input.substr(2) , output + doubledigitchar);
    }
}
    void printAllPossibleCodes(string input) {
    string output="";
    printAllPossibleCodes(input,output);
}
