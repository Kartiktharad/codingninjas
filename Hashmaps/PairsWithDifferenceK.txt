You are given with an array of integers and an integer K. Write a program to find and print all pairs which have difference K.
Best solution takes O(n) time. And take difference as absolute.
Input Format :
Line 1 : Integer n, Size of array
Line 2 : Array elements (separated by space)
Line 3 : K
Output format :
Print pairs in different lines (pair elements separated by space). In a pair, smaller element should be printed first.
(Order of different pairs is not important)
Constraints :
1 <= n <= 5000
Sample Input 1 :
4
5 1 2 4
3
Sample Output 1 :
2 5
1 4
Sample Input 2 :
4
4 4 4 4
0
Sample Output 2 :
4 4
4 4
4 4
4 4
4 4
4 4



#include<vector>
#include<unordered_map>
#include<cmath>
void printPairs(int *a, int n, int k) {
	unordered_map<int,int> seen;
        if(n>=1 && n<=5000){
            for(int i=0;i<n;i++){
                if(seen.count(a[i])>0){
                    seen[a[i]]++;
                }
                else{
                    seen[a[i]] = 1;
                }
            }
            for(int i=0;i<n;i++){
                if(seen[a[i]+k]>0 && k>0){
                    for(int j=0;j<seen[a[i]+k];j++){
                        cout<<a[i]<<" "<<(a[i]+k)<<endl;
                    }
                }
                else if(seen[a[i]+k]>0 && k==0){
                    for(int j=i;j<seen[a[i]+k]-1;j++){
                        cout<<a[i]<<" "<<(a[i]+k)<<endl;
                    }
                }
            }
        }
}



#include<iostream>
using namespace std;
#include "solution.h"

int main() {
	int n;
	cin >> n;
	int *input = new int[n];
	for(int i = 0; i < n; i++){
		cin >> input[i];
	}
	int k;
	cin >> k;
	printPairs(input, n, k);
}
