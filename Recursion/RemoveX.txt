Given a string, compute recursively a new string where all 'x' chars have been removed.
Sample Input 1 :
xaxb
Sample Output 1:
ab
Sample Input 2 :
abc
Sample Output 2:
abc
Sample Input 3 :
xx
Sample Output 3:


#include <iostream>
#include "solution.h"
using namespace std;

int main() {
    char input[100];
    cin.getline(input, 100);
    removeX(input);
    cout << input << endl;
}

// Change in the given string itself. So no need to return or print anything
#include<cstring>
void remove(char str[], int start)
{


    if (str[start] == '\0' ) {
        return;
    }


    remove(str, start + 1);
  int j;
    for (int i=j=0; i<strlen(str); i++)
       if (str[i] != 'x')
          str[j++] = str[i];

    str[j] = '\0';

}
void removeX(char input[]) {
    // Write your code here
    remove(input,0);

}
