Given a string S, remove consecutive duplicates from it recursively.
Input Format :
String S
Output Format :
Output string
Constraints :
1 <= Length of String S <= 10^3
Sample Input :
aabccba
Sample Output :
abcba



#include <iostream>
using namespace std;
#include "solution.h"

int main() {
    char s[100000];
    cin >> s;
    removeConsecutiveDuplicates(s);
    cout << s << endl;
}
void removeConsecutiveDuplicates(char *input) {
	/* Don't write main().
	* Don't read input, it is passed as function argument.
	* Change in the given string itself.
	* No need to return or print anything
	* Taking input and printing output is handled automatically.
	*/
if (input[0] == '\0')
        return;

    // if the adjacent characters are same
    if (input[0] == input[1]) {

        // Shift character by one to left
        int i = 0;
        while (input[i] != '\0') {
            input[i] = input[i + 1];
            i++;
        }

        // Check on Updated String S
        removeConsecutiveDuplicates(input);
    }

    // If the adjacent characters are not same
    // Check from S+1 string address
    removeConsecutiveDuplicates(input + 1);
}
